// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pb/vasystem/api/v2/routes.proto

package vasystemapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by airline.
	AirlineId string `protobuf:"bytes,1,opt,name=airline_id,json=airlineId,proto3" json:"airline_id,omitempty"`
	// Filter by departure airport.
	DepartureIcao string `protobuf:"bytes,2,opt,name=departure_icao,json=departureIcao,proto3" json:"departure_icao,omitempty"`
	// Filter by arrival airport.
	ArrivalIcao string `protobuf:"bytes,3,opt,name=arrival_icao,json=arrivalIcao,proto3" json:"arrival_icao,omitempty"`
	// Filter by the flight number. This does not include the airline code.
	IcaoFlightNumber string `protobuf:"bytes,4,opt,name=icao_flight_number,json=icaoFlightNumber,proto3" json:"icao_flight_number,omitempty"`
	// Whether to include archived routes. Defaults to false.
	IncludeArchived bool `protobuf:"varint,5,opt,name=include_archived,json=includeArchived,proto3" json:"include_archived,omitempty"`
	// Default is 100.
	PageSize uint64 `protobuf:"varint,14,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	// If used, all other parameters must match the call that provided the token.
	PageToken string `protobuf:"bytes,15,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return file_pb_vasystem_api_v2_routes_proto_rawDescGZIP(), []int{0}
}

func (x *ListRoutesRequest) GetAirlineId() string {
	if x != nil {
		return x.AirlineId
	}
	return ""
}

func (x *ListRoutesRequest) GetDepartureIcao() string {
	if x != nil {
		return x.DepartureIcao
	}
	return ""
}

func (x *ListRoutesRequest) GetArrivalIcao() string {
	if x != nil {
		return x.ArrivalIcao
	}
	return ""
}

func (x *ListRoutesRequest) GetIcaoFlightNumber() string {
	if x != nil {
		return x.IcaoFlightNumber
	}
	return ""
}

func (x *ListRoutesRequest) GetIncludeArchived() bool {
	if x != nil {
		return x.IncludeArchived
	}
	return false
}

func (x *ListRoutesRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRoutesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	// The next_page_token value to include in a subsequent List request. When
	// paginating, all other parameters provided to List must match the call that
	// provided the page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRoutesResponse) Reset() {
	*x = ListRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesResponse) ProtoMessage() {}

func (x *ListRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesResponse.ProtoReflect.Descriptor instead.
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return file_pb_vasystem_api_v2_routes_proto_rawDescGZIP(), []int{1}
}

func (x *ListRoutesResponse) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ListRoutesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier for the route.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The airline that operates this route.
	Airline *Airline `protobuf:"bytes,2,opt,name=airline,proto3" json:"airline,omitempty"`
	// This does not include the airline code.
	IcaoFlightNumber string `protobuf:"bytes,3,opt,name=icao_flight_number,json=icaoFlightNumber,proto3" json:"icao_flight_number,omitempty"`
	// The departure airport.
	Departure *Airport `protobuf:"bytes,5,opt,name=departure,proto3" json:"departure,omitempty"`
	// The arrival airport.
	Arrival *Airport `protobuf:"bytes,6,opt,name=arrival,proto3" json:"arrival,omitempty"`
	// Departure time is in UTC.
	DepartureTime *TimeOfDay `protobuf:"bytes,7,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	// Arrival time is in UTC.
	ArrivalTime *TimeOfDay `protobuf:"bytes,8,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	// The duration of this flight. Can also be calculated from the departure
	// and arrival times.
	Duration *durationpb.Duration `protobuf:"bytes,9,opt,name=duration,proto3" json:"duration,omitempty"`
	// The days of the week that this flight operates.
	DaysFlown []DayOfWeek `protobuf:"varint,10,rep,packed,name=days_flown,json=daysFlown,proto3,enum=vasystem.api.v2.DayOfWeek" json:"days_flown,omitempty"`
	// The aircraft models that operate this route.
	AircraftModels []*AircraftModel `protobuf:"bytes,11,rep,name=aircraft_models,json=aircraftModels,proto3" json:"aircraft_models,omitempty"`
	// Whether this route is archived.
	Archived bool `protobuf:"varint,16,opt,name=archived,proto3" json:"archived,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_pb_vasystem_api_v2_routes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_pb_vasystem_api_v2_routes_proto_rawDescGZIP(), []int{2}
}

func (x *Route) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route) GetAirline() *Airline {
	if x != nil {
		return x.Airline
	}
	return nil
}

func (x *Route) GetIcaoFlightNumber() string {
	if x != nil {
		return x.IcaoFlightNumber
	}
	return ""
}

func (x *Route) GetDeparture() *Airport {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *Route) GetArrival() *Airport {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *Route) GetDepartureTime() *TimeOfDay {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *Route) GetArrivalTime() *TimeOfDay {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *Route) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Route) GetDaysFlown() []DayOfWeek {
	if x != nil {
		return x.DaysFlown
	}
	return nil
}

func (x *Route) GetAircraftModels() []*AircraftModel {
	if x != nil {
		return x.AircraftModels
	}
	return nil
}

func (x *Route) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

var File_pb_vasystem_api_v2_routes_proto protoreflect.FileDescriptor

var file_pb_vasystem_api_v2_routes_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x62, 0x2f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x70, 0x62, 0x2f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x62, 0x2f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x62, 0x2f, 0x76, 0x61, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x62, 0x2f,
	0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x64, 0x61, 0x79, 0x6f, 0x66, 0x77, 0x65, 0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x70, 0x62, 0x2f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x32, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x66, 0x64, 0x61, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x69, 0x72,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x49, 0x63, 0x61, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x63, 0x61, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x49, 0x63,
	0x61, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x63, 0x61, 0x6f, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbe, 0x04, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x61, 0x69, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x63, 0x61, 0x6f, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x61, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x41, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61,
	0x79, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44,
	0x61, 0x79, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x79,
	0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x09, 0x64, 0x61, 0x79, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x6e, 0x12, 0x47, 0x0a, 0x0f, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0e, 0x61, 0x69, 0x72, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x32, 0x68, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3e, 0x5a, 0x3c, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2d, 0x61, 0x70, 0x69,
	0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x61, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_vasystem_api_v2_routes_proto_rawDescOnce sync.Once
	file_pb_vasystem_api_v2_routes_proto_rawDescData = file_pb_vasystem_api_v2_routes_proto_rawDesc
)

func file_pb_vasystem_api_v2_routes_proto_rawDescGZIP() []byte {
	file_pb_vasystem_api_v2_routes_proto_rawDescOnce.Do(func() {
		file_pb_vasystem_api_v2_routes_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_vasystem_api_v2_routes_proto_rawDescData)
	})
	return file_pb_vasystem_api_v2_routes_proto_rawDescData
}

var file_pb_vasystem_api_v2_routes_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_vasystem_api_v2_routes_proto_goTypes = []interface{}{
	(*ListRoutesRequest)(nil),   // 0: vasystem.api.v2.ListRoutesRequest
	(*ListRoutesResponse)(nil),  // 1: vasystem.api.v2.ListRoutesResponse
	(*Route)(nil),               // 2: vasystem.api.v2.Route
	(*Airline)(nil),             // 3: vasystem.api.v2.Airline
	(*Airport)(nil),             // 4: vasystem.api.v2.Airport
	(*TimeOfDay)(nil),           // 5: vasystem.api.v2.TimeOfDay
	(*durationpb.Duration)(nil), // 6: google.protobuf.Duration
	(DayOfWeek)(0),              // 7: vasystem.api.v2.DayOfWeek
	(*AircraftModel)(nil),       // 8: vasystem.api.v2.AircraftModel
}
var file_pb_vasystem_api_v2_routes_proto_depIdxs = []int32{
	2,  // 0: vasystem.api.v2.ListRoutesResponse.routes:type_name -> vasystem.api.v2.Route
	3,  // 1: vasystem.api.v2.Route.airline:type_name -> vasystem.api.v2.Airline
	4,  // 2: vasystem.api.v2.Route.departure:type_name -> vasystem.api.v2.Airport
	4,  // 3: vasystem.api.v2.Route.arrival:type_name -> vasystem.api.v2.Airport
	5,  // 4: vasystem.api.v2.Route.departure_time:type_name -> vasystem.api.v2.TimeOfDay
	5,  // 5: vasystem.api.v2.Route.arrival_time:type_name -> vasystem.api.v2.TimeOfDay
	6,  // 6: vasystem.api.v2.Route.duration:type_name -> google.protobuf.Duration
	7,  // 7: vasystem.api.v2.Route.days_flown:type_name -> vasystem.api.v2.DayOfWeek
	8,  // 8: vasystem.api.v2.Route.aircraft_models:type_name -> vasystem.api.v2.AircraftModel
	0,  // 9: vasystem.api.v2.RoutesService.ListRoutes:input_type -> vasystem.api.v2.ListRoutesRequest
	1,  // 10: vasystem.api.v2.RoutesService.ListRoutes:output_type -> vasystem.api.v2.ListRoutesResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pb_vasystem_api_v2_routes_proto_init() }
func file_pb_vasystem_api_v2_routes_proto_init() {
	if File_pb_vasystem_api_v2_routes_proto != nil {
		return
	}
	file_pb_vasystem_api_v2_aircraft_proto_init()
	file_pb_vasystem_api_v2_airlines_proto_init()
	file_pb_vasystem_api_v2_airports_proto_init()
	file_pb_vasystem_api_v2_dayofweek_proto_init()
	file_pb_vasystem_api_v2_timeofday_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_vasystem_api_v2_routes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_vasystem_api_v2_routes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_vasystem_api_v2_routes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_vasystem_api_v2_routes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_vasystem_api_v2_routes_proto_goTypes,
		DependencyIndexes: file_pb_vasystem_api_v2_routes_proto_depIdxs,
		MessageInfos:      file_pb_vasystem_api_v2_routes_proto_msgTypes,
	}.Build()
	File_pb_vasystem_api_v2_routes_proto = out.File
	file_pb_vasystem_api_v2_routes_proto_rawDesc = nil
	file_pb_vasystem_api_v2_routes_proto_goTypes = nil
	file_pb_vasystem_api_v2_routes_proto_depIdxs = nil
}
